# ワンライナーお手軽実行するためのファイル
#
# {書き方}
#     （例）
#          [これはワンライナーです] oneliner | some-command | other-command
#
#     []のなかにそのワンライナーの説明を書きます（省いても構いません）
#     []の後ろに1つ以上のスペースをあけてワンライナーを書きます
#
# {@マークについて}
#     ワンライナー中に@マークを1つだけ記述することができます
#     実行時にその@マークの位置にカーソルが置かれます
#
# {!マークについて}
#     ワンライナーの行末に!マークを置くと、ワンライナーが即座に実行されます
#
# {#マークについて}
#     2種類の使用方法があります
#     行頭に置かれた場合、その行はfzfに表示されません
#     行中に置いた場合、それ以降をコメントとみなし黒色表示します
#     ただし、後者の場合#マークの前後にスペースを必要とします
#
# {:マークについて}
#     セクションごとのタイトルに最適です
#     シェルが無視してくれる記号には#と:があります
#     #は行頭にあるとfzfが無視しますが、:は問題無いです
#
: Utils
[公開鍵をクリップボードにコピー] cat ~/.ssh/id_rsa.pub | pbcopy

: Text
[標準入力をHTMLデコード] @ | perl -MHTML::Entities -pe 'decode_entities($_);'

: File
[カレントディレクトリ以下の.DS_Storeを削除] find ./ -name ".DS_Store" | xargs rm
[カレントディレクトリ以下のパーミッションを初期化] find . \( -type f -exec chmod 644 {} + \) -or \( -type d -exec chmod 755 {} + \)

: Environment
[PATHを一行ずつ表示] echo $PATH | tr ':' '\n'
[色見本を表示] for c in {000..015}; do echo -n "\e[38;5;${c}m $c" ; [ $(($c%16)) -eq 7 ] && echo;done;echo;for c in {016..255}; do echo -n "\e[38;5;${c}m $c" ; [ $(($((c-16))%6)) -eq 5 ] && echo;done;echo

# vim:ft=sh
