# vim:ft=zsh ts=2 sw=2 sts=2

prompt-pwd() {
  setopt localoptions extendedglob

  local current_pwd="${PWD/#$HOME/~}"
  local ret_directory

  if [[ "$current_pwd" == (#m)[/~] ]]; then
    ret_directory="$MATCH"
    unset MATCH
  else
    ret_directory="${${${${(@j:/:M)${(@s:/:)current_pwd}##.#?}:h}%/}//\%/%%}/${${current_pwd:t}//\%/%%}"
  fi

  unset current_pwd

  print "$ret_directory"
}

prompt_powerlinekai_precmd() {
  # Check for untracked files or updated submodules since vcs_info doesn't.
  if [[ ! -z $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
    fmt_branch=" %b%u%c${__PROMPT_SKWP_COLORS[4]}●%f"
  else
    fmt_branch=" %b%u%c"
  fi
  zstyle ':vcs_info:*:prompt:*' formats "${fmt_branch}"
  POWERLINE_PROMPT_PWD=$(prompt-pwd)
  vcs_info 'prompt'
}

prompt_powerlinekai_setup() {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  add-zsh-hook precmd prompt_powerlinekai_precmd

  # Use extended color pallete if available.
  if [[ $TERM = *256color* || $TERM = *rxvt* ]]; then
    __PROMPT_SKWP_COLORS=(
      "%F{81}"  # turquoise
      "%F{166}" # orange
      "%F{135}" # purple
      "%F{161}" # hotpink
      "%F{118}" # limegreen
    )
  else
    __PROMPT_SKWP_COLORS=(
      "%F{cyan}"
      "%F{yellow}"
      "%F{magenta}"
      "%F{red}"
      "%F{green}"
    )
  fi

  # Enable VCS systems you use.
  zstyle ':vcs_info:*' enable git

  # check-for-changes can be really slow.
  # You should disable it if you work with large repositories.
  zstyle ':vcs_info:*:prompt:*' check-for-changes true

  # Formats:
  # %b - branchname
  # %u - unstagedstr (see below)
  # %c - stagedstr (see below)
  # %a - action (e.g. rebase-i)
  # %R - repository path
  # %S - path in the repository
  # %n - user
  # %m - machine hostname

  local fmt_branch="${__PROMPT_SKWP_COLORS[2]}%b%f%u%c"
  local fmt_action="${__PROMPT_SKWP_COLORS[5]}%a%f"
  local fmt_unstaged="${__PROMPT_SKWP_COLORS[2]}●%f"
  local fmt_staged="${__PROMPT_SKWP_COLORS[5]}●%f"

  zstyle ':vcs_info:*:prompt:*' unstagedstr   "${fmt_unstaged}"
  zstyle ':vcs_info:*:prompt:*' stagedstr     "${fmt_staged}"
  zstyle ':vcs_info:*:prompt:*' actionformats "${fmt_branch}${fmt_action}"
  zstyle ':vcs_info:*:prompt:*' formats       "${fmt_branch}"
  zstyle ':vcs_info:*:prompt:*' nvcsformats   ""

  # Setup powerline style colouring
  POWERLINE_COLOR_BG_GRAY=%K{240}
  POWERLINE_COLOR_BG_LIGHT_GRAY=%K{240}
  POWERLINE_COLOR_BG_WHITE=%K{255}

  POWERLINE_COLOR_FG_GRAY=%F{240}
  POWERLINE_COLOR_FG_LIGHT_GRAY=%F{240}
  POWERLINE_COLOR_FG_WHITE=%F{255}

  POWERLINE_SEPARATOR=$'\uE0B0'
  POWERLINE_R_SEPARATOR=$'\uE0B2'

  POWERLINE_LEFT_A="%K{006}%F{015} "'${POWERLINE_PROMPT_PWD}'" %k%f%F{006}%K{blue}"$POWERLINE_SEPARATOR
  POWERLINE_LEFT_B="%k%f%F{015}%K{blue} "'${vcs_info_msg_0_}'" %k%f%F{blue}%K{black}"$POWERLINE_SEPARATOR
  POWERLINE_LEFT_C=" %k%f%F{015}%K{black} %k%f%F{black}"$POWERLINE_SEPARATOR"%f "
  # POWERLINE_LEFT_C=" %k%f%F{015}%K{black}"'$(git_time_details)'" %k%f%F{black}"$POWERLINE_SEPARATOR"%f "
  POWERLINE_RIGHT_A=""
  POWERLINE_RIGHT_B=" %n@%m"

  PROMPT=$POWERLINE_LEFT_A$POWERLINE_LEFT_B$POWERLINE_LEFT_C
  RPROMPT=$POWERLINE_COLOR_FG_WHITE$POWERLINE_R_SEPARATOR"%f%k"$POWERLINE_COLOR_BG_WHITE$POWERLINE_COLOR_FG_GRAY$POWERLINE_RIGHT_A$POWERLINE_RIGHT_B" %f%k"
}

prompt_powerlinekai_setup "$@"

